
# Catch-all redirect for unknown subdomains
server {
	listen [::]:80 ipv6only=off;
	listen [::]:443 ssl spdy ipv6only=off;
	
	include arx-libertatis.org.private.conf;
	
	rewrite ^ http://arx-libertatis.org/;
}

# Redirect www. requests to actual domain
server {
	listen [::]:80;
	
	server_name www.arx-libertatis.org;
	
	include arx-libertatis.org.private.conf;
	
	rewrite ^ $scheme://arx-libertatis.org$request_uri? permanent;
}

# Main Arx Libertatis website
server {
	listen [::]:80;
	listen [::]:443 ssl spdy;
	
	server_name arx-libertatis.org;
	
	include arx-libertatis.org.private.conf;
	
	index index.html index.htm;
	
	# Custom not found / forbidden error page
	error_page 403 404 /404;
	
	include static-expiry.conf;
	
	# Temporary downloads
	location /temp/ {
		types { }
		default_type application/octet-stream;
	}
	
	# Build logs
	location /buildlogs/ {
		autoindex on;
	}
	
	# IRC logs
	location /irclogs/ {
		autoindex on;
	}
	
	# Downloads
	location /files/ {
		autoindex on;
		# Redirect requests for with only filename to the appropriate subdirectory
		rewrite "/files/([a-z\-]+\-\d+\.[\d\.]+)((-[a-z\d-]+)?[\.][^/\d][^/]*)"
		        "/files/$1/$1$2" permanent;
	}
	
	# Stip query parameters - they aren't needed for static pages, only kill cache,
	# and duplicate urls
	if ($args) {
		rewrite ^ $uri? permanent;
	}
	
	try_files $uri $uri.html $uri/ =404;
	
	include errors.conf;
}

# Redirect www. requests to actual domain
server {
	listen [::]:80;
	
	server_name www.arx.vg;
	
	include arx.vg.private.conf;
	
	rewrite ^ $scheme://arx.vg$request_uri? permanent;
}

# Arx Libertatis regexp-based URL shortener
server {
	listen [::]:80;
	
	server_name arx.vg;
	
	include arx.vg.private.conf;
	
	# Patch
	rewrite ^/ArxFatalis_1.21_MULTILANG.exe$
	        http://download.zenimax.com/arxfatalis/patches/1.21/ArxFatalis_1.21_MULTILANG.exe
	        permanent;
	rewrite ^/arx_jpn_patch_1.02j.exe$
	        http://web.archive.org/web/http://www.capcom.co.jp/pc/arx/patch/arx_jpn_patch_1.02j.exe
	        permanent;
	
	# Install script
	rewrite ^/arx-install-data$
	        https://raw.githubusercontent.com/arx/ArxLibertatis/master/scripts/arx-install-data permanent;
	rewrite ^/scripts/ /arx-install-data permanent;
	
	# GitHub
	rewrite "^/ref/(.*)$" /g/ArxLibertatis/ref/$1;
	rewrite "^/pull/(.*)$" /g/ArxLibertatis/pull/$1;
	rewrite "^/([0-9a-f]{5,6}\^?)(\.\.[0-9a-f]{5,6})?$" /g/ArxLibertatis/$1$2;
	rewrite "^/web/(.*)$" /g/arx-libertatis.org/$1;
	rewrite "^/g/([^/]+)/ref/(.*)$" https://github.com/arx/$1/commits/$2 permanent;
	rewrite "^/g/([^/]+)/pull/(.*)$" https://github.com/arx/$1/pull/$2 permanent;
	rewrite "^/g/([^/]+)/([0-9a-f]{5,6})$" https://github.com/arx/$1/commit/$2 permanent;
	rewrite "^/g/([^/]+)/([0-9a-f]{5,6}\^?)\.\.([0-9a-f]{5,6})$"
	        https://github.com/arx/$1/compare/$2...$3 permanent;
	
	# Bug tracker
	rewrite ^/web-(\d+)$ https://bugs.arx-libertatis.org/website/issues/web-$1 permanent;
	rewrite ^/(\d+)$ https://bugs.arx-libertatis.org/arx/issues/$1 permanent;
	
	# Release announcements
	rewrite ^/(\d+\.\d+(\.\d+)?)$ http://arx-libertatis.org/releases/$1 permanent;
	
	# News
	rewrite ^/(\d+-(.+)?)$ http://arx-libertatis.org/news/$1 permanent;
	
	# Wiki
	rewrite "^/([A-Z][A-Za-z0-9_:]*)$" http://wiki.arx-libertatis.org/$1 permanent;
	rewrite "^/wiki$" http://wiki.arx-libertatis.org/ permanent;
	rewrite "^/wiki/(\d+)$" http://wiki.arx-libertatis.org/?diff=$1 permanent;
	
	# Redirect everything else to the main page
	rewrite ^ $scheme://arx-libertatis.org$request_uri? permanent;
	
	include errors.conf;
}

# Arx Libertatis website API
server {
	
	listen [::]:80;
	listen [::]:443 ssl spdy;
	
	server_name api.arx-libertatis.org;
	
	include api.arx-libertatis.org.private.conf;
	
	location = / {
		rewrite ^ http://arx-libertatis.org/;
	}
	
	location ~ \.php$ {
		
		include fastcgi.conf;
		
		# Use error pages generated by the fastcgi app
		fastcgi_intercept_errors off;
		
		fastcgi_pass php;
	}
	
	# Rewrite API URLs to internal implementation files
	rewrite /([^/]+)/v([0-9]+)/(.*) /$1.$2.php?resource=$3;
}
