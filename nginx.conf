
# HTTPS redirect for arx-libertatis.org (allow HTTP for downloads)
server {
	listen [::]:80;
	
	server_name arx-libertatis.org;
	
	include arx-libertatis.org.private.conf;
	
	# Downloads
	location /files/ {
		root /var/www/arx-libertatis.org/htdocs;
		# Redirect requests for with only filename to the appropriate subdirectory
		rewrite "/files/([a-z\-]+\-\d+\.[\d\.]+(?:-rc\d+|-dev(?:-\d+)+))((?:-[a-z\d-]+)?[\.][^/\d][^/]*)"
		        "/files/snapshots/$1/$1$2" permanent;
		rewrite "/files/([a-z\-]+\-\d+\.[\d\.]+)((?:-[a-z\d-]+)?[\.][^/\d][^/]*)"
		        "/files/$1/$1$2" permanent;
	}
	
	location @use_https {
		return 301 https://arx-libertatis.org$request_uri;
	}
	error_page 403 404 @use_https;
}

# Main Arx Libertatis website
server {
	listen [::]:443 ssl http2;
	
	server_name arx-libertatis.org;
	
	include arx-libertatis.org.private.conf;
	
	root /var/www/arx-libertatis.org/htdocs;
	
	# Custom not found / forbidden error page
	error_page 403 404 /404;
	
	# Temporary downloads
	location /temp/ {
		types { }
		default_type application/octet-stream;
	}
	
	# Build logs
	location /buildlogs/ {
		autoindex on;
	}
	
	# IRC logs
	location /irclogs/ {
		autoindex on;
	}
	
	# Downloads
	location /files/ {
		autoindex on;
		# Redirect requests for with only filename to the appropriate subdirectory
		rewrite "/files/([a-z\-]+\-\d+\.[\d\.]+(?:-rc\d+|-dev(?:-\d+)+))((?:-[a-z\d-]+)?[\.][^/\d][^/]*)"
		        "/files/snapshots/$1/$1$2" permanent;
		rewrite "/files/([a-z\-]+\-\d+\.[\d\.]+)((?:-[a-z\d-]+)?[\.][^/\d][^/]*)"
		        "/files/$1/$1$2" permanent;
	}
	
	location / {
		# Strip query parameters - they aren't needed for static pages, only kill cache,
		# and duplicate urls
		if ($args) {
			rewrite ^ $uri? permanent;
		}
		try_files $uri $uri.html $uri/ =404;
	}
	
	include https-only-headers.conf;
	include static-expiry-https-only.conf;
	
	include errors.conf;
}

server {
	listen [::]:443 ssl http2;
	
	server_name openpgpkey.arx-libertatis.org;
	
	location /.well-known/ {
		root /var/www/arx-libertatis.org/htdocs;
	}
	
	location / {
		return 301 https://arx-libertatis.org$request_uri;
	}
}

# Arx Libertatis regexp-based URL shortener
server {
	listen [::]:443 ssl http2;
	
	server_name arx.vg;
	
	include arx.vg.private.conf;
	
	# Short links used in AL
	rewrite ^/data$ "https://wiki.arx-libertatis.org/Getting_the_game_data" permanent;
	rewrite ^/demo-data$ "https://wiki.arx-libertatis.org/Getting_the_game_data#Demo" permanent;
	rewrite ^/install-data$ "https://wiki.arx-libertatis.org/Installing_the_game_data_under_Linux" permanent;
	rewrite ^/paths$ "https://wiki.arx-libertatis.org/Data_directories" permanent;
	rewrite ^/bugs$ "https://bugs.arx-libertatis.org/" permanent;
	rewrite ^/bug$ "https://bugs.arx-libertatis.org/arx/issues/new" permanent;
	
	# Patch
	rewrite ^/ArxFatalis_1.21_MULTILANG.exe$
	        https://cdn.bethsoft.com/arxfatalis/patches/1.21/ArxFatalis_1.21_MULTILANG.exe
	        permanent;
	rewrite ^/arx_jpn_patch_1.02j.exe$
	        https://web.archive.org/web/http://www.capcom.co.jp/pc/arx/patch/arx_jpn_patch_1.02j.exe
	        permanent;
	
	# Install script
	rewrite ^/arx-install-data$
	        https://raw.githubusercontent.com/arx/ArxLibertatis/master/scripts/arx-install-data permanent;
	rewrite ^/scripts/ /arx-install-data permanent;
	
	# GitHub
	rewrite "^/ref/(.*)$" /g/ArxLibertatis/ref/$1;
	rewrite "^/pull/(.*)$" /g/ArxLibertatis/pull/$1;
	rewrite "^/([0-9a-f]{5,7}\^?)(\.\.[0-9a-f]{5,7})?$" /g/ArxLibertatis/$1$2;
	rewrite "^/web/(.*)$" /g/arx-libertatis.org/$1;
	rewrite "^/g/([^/]+)/ref/(.*)$" https://github.com/arx/$1/commits/$2 permanent;
	rewrite "^/g/([^/]+)/pull/(.*)$" https://github.com/arx/$1/pull/$2 permanent;
	rewrite "^/g/([^/]+)/([0-9a-f]{5,7})$" https://github.com/arx/$1/commit/$2 permanent;
	rewrite "^/g/([^/]+)/([0-9a-f]{5,7}\^?)\.\.([0-9a-f]{5,7})$"
	        https://github.com/arx/$1/compare/$2...$3 permanent;
	
	# Bug tracker
	rewrite ^/web-(\d+)$ https://bugs.arx-libertatis.org/website/issues/web-$1 permanent;
	rewrite ^/(\d+)$ https://bugs.arx-libertatis.org/arx/issues/$1 permanent;
	
	# Releases
	rewrite ^/download$ https://wiki.arx-libertatis.org/Download permanent;
	rewrite ^/(\d+\.\d+(\.\d+)?)$ https://arx-libertatis.org/releases/$1 permanent;
	
	# News
	rewrite ^/(\d+-(.+)?)$ https://arx-libertatis.org/news/$1 permanent;
	
	# Wiki
	rewrite "^/([A-Z][A-Za-z0-9_:]*)$" https://wiki.arx-libertatis.org/$1 permanent;
	rewrite "^/wiki$" https://wiki.arx-libertatis.org/ permanent;
	rewrite "^/wiki/(\d+)$" https://wiki.arx-libertatis.org/?diff=$1 permanent;
	
	# Development snapshots
	rewrite ^/snapshots$ https://wiki.arx-libertatis.org/Development_snapshots permanent;
	rewrite "^/(\d+\.\d+(\.\d+)?-dev-.*)$"
	        https://arx-libertatis.org/files/snapshots/arx-libertatis-$1/ permanent;
	rewrite "^/(\d+\.\d+(\.\d+)?-rc.*)$"
	        https://arx-libertatis.org/files/snapshots/arx-libertatis-$1/ permanent;
	
	# Redirect everything else to the main page
	rewrite ^ https://arx-libertatis.org$request_uri? permanent;
	
	include https-only-headers.conf;
	
	include errors.conf;
}

# Arx Libertatis website API
server {
	listen [::]:80;
	listen [::]:443 ssl http2;
	
	server_name api.arx-libertatis.org;
	
	include api.arx-libertatis.org.private.conf;
	
	location = / {
		rewrite ^ https://arx-libertatis.org/;
	}
	
	location ~ \.php$ {
		
		include fastcgi.conf;
		
		# Use error pages generated by the fastcgi app
		fastcgi_intercept_errors off;
		
		fastcgi_pass php;
	}
	
	# Rewrite API URLs to internal implementation files
	rewrite /([^/]+)/v([0-9]+)/(.*) /$1.$2.php?resource=$3;
	
	include https-only-headers.conf;
}
                                                      
server {
	listen [::]:80;
	
	server_name arx.parpg.net;
	
	include arx-libertatis.org.private.conf;
	
	return 301 https://wiki.arx-libertatis.org$request_uri;
}
